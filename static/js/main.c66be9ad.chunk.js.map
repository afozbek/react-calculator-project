{"version":3,"sources":["components/Result.js","components/Buttons.js","components/Author.js","Calculator.js","index.js"],"names":["Result","props","react_default","a","createElement","className","head","id","result","Buttons","clearStyle","background","operatorStyle","equalsStyle","value","style","onClick","clear","operations","numbers","decimal","Author","role","aria-label","href","github","target","rel","name","isOperator","endsWithOperator","startsWithOperator","startsWithZero","Calculator","state","currVal","prevVal","maxPrevVal","isEvaluated","maxDigitWarning","_this","setState","setTimeout","handleClear","handleNumbers","e","currVal_","prevVal_","includes","length","replace","test","handleOperations","Object","toConsumableArray","slicedOps","slice","concat","handleResult","sliced","math","String","handleDecimal","components_Result","this","components_Buttons","components_Author","React","Component","localStorage","setItem","ReactDOM","render","src_Calculator","document","getElementById"],"mappings":"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","file":"static/js/main.c66be9ad.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Result = props => {\r\n  return (\r\n    <div className=\"result-container\">\r\n      <div className=\"head\">{props.head}</div>\r\n      <div id=\"display\" className=\"result\">\r\n        {props.result}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import React from \"react\";\r\n\r\nconst Buttons = props => {\r\n  const styles = {\r\n    clearStyle: { background: \"#ac3939\" },\r\n    operatorStyle: { background: \"#666666\" },\r\n    equalsStyle: { background: \"#004466\" }\r\n  };\r\n  const { clearStyle, operatorStyle, equalsStyle } = styles;\r\n  return (\r\n    <div className=\"buttons-container\">\r\n      <button\r\n        id=\"clear\"\r\n        value=\"AC\"\r\n        className=\"grid-item grid-item-clear\"\r\n        style={clearStyle}\r\n        onClick={props.clear}\r\n      >\r\n        AC\r\n      </button>\r\n      <button\r\n        id=\"divide\"\r\n        value=\"/\"\r\n        style={operatorStyle}\r\n        onClick={props.operations}\r\n      >\r\n        /\r\n      </button>\r\n      <button\r\n        id=\"multiply\"\r\n        value=\"*\"\r\n        style={operatorStyle}\r\n        onClick={props.operations}\r\n      >\r\n        x\r\n      </button>\r\n      <button id=\"seven\" value=\"7\" onClick={props.numbers}>\r\n        7\r\n      </button>\r\n      <button id=\"eight\" value=\"8\" onClick={props.numbers}>\r\n        8\r\n      </button>\r\n      <button id=\"nine\" value=\"9\" onClick={props.numbers}>\r\n        9\r\n      </button>\r\n      <button\r\n        id=\"subtract\"\r\n        value=\"-\"\r\n        style={operatorStyle}\r\n        onClick={props.operations}\r\n      >\r\n        -\r\n      </button>\r\n      <button id=\"four\" value=\"4\" onClick={props.numbers}>\r\n        4\r\n      </button>\r\n      <button id=\"five\" value=\"5\" onClick={props.numbers}>\r\n        5\r\n      </button>\r\n      <button id=\"six\" value=\"6\" onClick={props.numbers}>\r\n        6\r\n      </button>\r\n      <button\r\n        id=\"add\"\r\n        value=\"+\"\r\n        style={operatorStyle}\r\n        onClick={props.operations}\r\n      >\r\n        +\r\n      </button>\r\n      <button id=\"one\" value=\"1\" onClick={props.numbers}>\r\n        1\r\n      </button>\r\n      <button id=\"two\" value=\"2\" onClick={props.numbers}>\r\n        2\r\n      </button>\r\n      <button id=\"three\" value=\"3\" onClick={props.numbers}>\r\n        3\r\n      </button>\r\n      <button\r\n        id=\"zero\"\r\n        value=\"0\"\r\n        className=\"grid-item-zero\"\r\n        onClick={props.numbers}\r\n      >\r\n        0\r\n      </button>\r\n      <button id=\"decimal\" value=\".\" onClick={props.decimal}>\r\n        .\r\n      </button>\r\n      <button\r\n        id=\"equals\"\r\n        value=\"=\"\r\n        className=\"grid-item-equal\"\r\n        style={equalsStyle}\r\n        onClick={props.result}\r\n      >\r\n        =\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n","import React from \"react\";\r\n\r\nconst Author = props => {\r\n  return (\r\n    <div id=\"author\" className=\"author\">\r\n      <p>\r\n        Made with{\" \"}\r\n        <span role=\"img\" aria-label=\"Heart\">\r\n          ðŸ’—\r\n        </span>{\" \"}\r\n        by\r\n      </p>\r\n      <a href={props.github} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        {props.name}\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Author;\r\n","import React from \"react\";\r\nimport * as math from \"mathjs\";\r\n\r\nimport Result from \"./components/Result\";\r\nimport Buttons from \"./components/Buttons\";\r\nimport Author from \"./components/Author\";\r\nimport \"./App.css\";\r\n\r\nconst isOperator = /[*+\\-/]/,\r\n  endsWithOperator = /[*+\\-/]$/,\r\n  startsWithOperator = /^[*+\\-/]/,\r\n  startsWithZero = /^0/;\r\n\r\nclass Calculator extends React.Component {\r\n  state = {\r\n    currVal: \"0\",\r\n    prevVal: \"0\",\r\n    maxPrevVal: \"0\",\r\n    operations: [],\r\n    isEvaluated: false\r\n  };\r\n\r\n  maxDigitWarning = () => {\r\n    this.setState({\r\n      prevVal: \"MAX DIGIT LIMIT\",\r\n      maxPrevVal: this.state.prevVal\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({\r\n        prevVal: this.state.maxPrevVal\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  handleClear = () => {\r\n    this.setState({\r\n      currVal: \"0\",\r\n      prevVal: \"0\",\r\n      maxPrevVal: \"0\",\r\n      operations: [],\r\n      isEvaluated: false\r\n    });\r\n  };\r\n\r\n  handleNumbers = e => {\r\n    let currVal_ = this.state.currVal;\r\n    let prevVal_ = this.state.prevVal;\r\n    let value = e.target.value;\r\n\r\n    if (!prevVal_.includes(\"DIGIT\")) {\r\n      if (prevVal_.length > 10) {\r\n        this.maxDigitWarning();\r\n      } else if (this.state.isEvaluated) {\r\n        this.setState({\r\n          currVal: value,\r\n          prevVal: value,\r\n          operations: [],\r\n          isEvaluated: false\r\n        });\r\n      } else {\r\n        if (this.state.prevVal.includes(\".\")) {\r\n          this.setState({\r\n            currVal: currVal_ + value,\r\n            prevVal: prevVal_ + value\r\n          });\r\n        } else {\r\n          let currVal = currVal_.replace(startsWithZero, \"\");\r\n          let prevVal = prevVal_.replace(startsWithZero, \"\");\r\n\r\n          if (prevVal_ === \"0\" && value === \"0\") return;\r\n\r\n          if (isOperator.test(prevVal)) {\r\n            prevVal = value;\r\n          } else {\r\n            prevVal += value;\r\n          }\r\n\r\n          this.setState({\r\n            currVal: currVal + value,\r\n            prevVal: prevVal\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  handleOperations = e => {\r\n    let currVal = this.state.currVal;\r\n    let prevVal = this.state.prevVal;\r\n    let value = e.target.value;\r\n    let operations = [...this.state.operations];\r\n\r\n    if (this.state.isEvaluated) {\r\n      this.setState({\r\n        currVal: prevVal + value,\r\n        prevVal: value,\r\n        operations: [value],\r\n        isEvaluated: false\r\n      });\r\n    } else {\r\n      if (isOperator.test(prevVal)) {\r\n        let currVal_ = currVal.replace(endsWithOperator, value);\r\n        let slicedOps = operations.slice(0, operations.length - 1);\r\n        this.setState({\r\n          currVal: currVal_,\r\n          prevVal: value,\r\n          operations: [...slicedOps, value]\r\n        });\r\n      } else {\r\n        if (prevVal.includes(\"DIGIT\")) {\r\n          return;\r\n        }\r\n\r\n        this.setState({\r\n          currVal: currVal + value,\r\n          prevVal: value,\r\n          operations: [...operations, value]\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleResult = () => {\r\n    let currVal = this.state.currVal;\r\n\r\n    if (this.state.isEvaluated) {\r\n      return;\r\n    }\r\n\r\n    if (startsWithOperator.test(currVal) && endsWithOperator.test(currVal)) {\r\n      let sliced = currVal.slice(0, currVal.length - 1);\r\n      if (sliced[0] === \"-\" || sliced[0] === \"+\") {\r\n        let result = math.eval(sliced);\r\n        this.setState({\r\n          currVal: sliced + \"=\" + String(result),\r\n          prevVal: String(result),\r\n          isEvaluated: true\r\n        });\r\n      } else {\r\n        return;\r\n      }\r\n    } else if (startsWithOperator.test(currVal)) {\r\n      let sliced = currVal.slice();\r\n      if (sliced[0] === \"-\" || sliced[0] === \"+\") {\r\n        let result = math.eval(sliced);\r\n        this.setState({\r\n          currVal: sliced + \"=\" + String(result),\r\n          prevVal: String(result),\r\n          isEvaluated: true\r\n        });\r\n      }\r\n    } else if (endsWithOperator.test(currVal)) {\r\n      let sliced = currVal.slice(0, currVal.length - 1);\r\n      let result = math.eval(sliced);\r\n      this.setState({\r\n        currVal: sliced + \"=\" + String(result),\r\n        prevVal: String(result),\r\n        isEvaluated: true\r\n      });\r\n    } else {\r\n      let sliced = currVal.slice();\r\n      let result = math.eval(sliced);\r\n\r\n      this.setState({\r\n        currVal: sliced + \"=\" + String(result),\r\n        prevVal: String(result),\r\n        isEvaluated: true\r\n      });\r\n    }\r\n  };\r\n\r\n  handleDecimal = e => {\r\n    if (this.state.isEvaluated) {\r\n      this.setState({\r\n        currVal: \"0\" + e.target.value,\r\n        prevVal: \"0\" + e.target.value,\r\n        isEvaluated: false\r\n      });\r\n    } else {\r\n      if (this.state.prevVal.includes(\".\")) {\r\n        return;\r\n      } else {\r\n        if (this.state.prevVal.includes(\"DIGIT\")) {\r\n          return;\r\n        }\r\n        this.setState({\r\n          currVal: this.state.currVal + e.target.value,\r\n          prevVal: this.state.prevVal + e.target.value\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"container\" className=\"container\">\r\n        <div className=\"calculator-container\">\r\n          <Result head={this.state.currVal} result={this.state.prevVal} />\r\n          <Buttons\r\n            clear={this.handleClear}\r\n            numbers={this.handleNumbers}\r\n            operations={this.handleOperations}\r\n            decimal={this.handleDecimal}\r\n            result={this.handleResult}\r\n          />\r\n        </div>\r\n        <Author\r\n          name=\"Abdullah Furkan Ã–zbek\"\r\n          github=\"https://github.com/afozbek\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calculator;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport Calculator from \"./Calculator\";\r\nimport \"./index.css\";\r\n\r\nconst projectName = \"javaScript-calculator\";\r\nlocalStorage.setItem(\"project-name\", projectName);\r\n\r\nReactDOM.render(<Calculator />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}