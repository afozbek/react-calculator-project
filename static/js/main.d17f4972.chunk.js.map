{"version":3,"sources":["components/Result.js","components/Buttons.js","components/Author.js","Calculator.js","index.js"],"names":["Result","props","className","head","id","result","Buttons","clearStyle","background","operatorStyle","equalsStyle","value","style","onClick","clear","operations","numbers","decimal","Author","role","aria-label","href","github","target","rel","name","isOperator","endsWithOperator","startsWithOperator","startsWithZero","Calculator","state","currVal","prevVal","maxPrevVal","isEvaluated","maxDigitWarning","setState","setTimeout","handleClear","handleNumbers","e","currVal_","prevVal_","includes","length","replace","test","handleOperations","slicedOps","slice","handleResult","sliced","math","String","handleDecimal","this","React","Component","localStorage","setItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d17f4972.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Result = props => {\r\n  return (\r\n    <div className=\"result-container\">\r\n      <div className=\"head\">{props.head}</div>\r\n      <div id=\"display\" className=\"result\">\r\n        {props.result}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import React from \"react\";\r\n\r\nconst Buttons = props => {\r\n  const styles = {\r\n    clearStyle: { background: \"#ac3939\" },\r\n    operatorStyle: { background: \"#666666\" },\r\n    equalsStyle: { background: \"#004466\" }\r\n  };\r\n  const { clearStyle, operatorStyle, equalsStyle } = styles;\r\n  return (\r\n    <div className=\"buttons-container\">\r\n      <button\r\n        id=\"clear\"\r\n        value=\"AC\"\r\n        className=\"grid-item grid-item-clear\"\r\n        style={clearStyle}\r\n        onClick={props.clear}\r\n      >\r\n        AC\r\n      </button>\r\n      <button\r\n        id=\"divide\"\r\n        value=\"/\"\r\n        style={operatorStyle}\r\n        onClick={props.operations}\r\n      >\r\n        /\r\n      </button>\r\n      <button\r\n        id=\"multiply\"\r\n        value=\"*\"\r\n        style={operatorStyle}\r\n        onClick={props.operations}\r\n      >\r\n        x\r\n      </button>\r\n      <button id=\"seven\" value=\"7\" onClick={props.numbers}>\r\n        7\r\n      </button>\r\n      <button id=\"eight\" value=\"8\" onClick={props.numbers}>\r\n        8\r\n      </button>\r\n      <button id=\"nine\" value=\"9\" onClick={props.numbers}>\r\n        9\r\n      </button>\r\n      <button\r\n        id=\"subtract\"\r\n        value=\"-\"\r\n        style={operatorStyle}\r\n        onClick={props.operations}\r\n      >\r\n        -\r\n      </button>\r\n      <button id=\"four\" value=\"4\" onClick={props.numbers}>\r\n        4\r\n      </button>\r\n      <button id=\"five\" value=\"5\" onClick={props.numbers}>\r\n        5\r\n      </button>\r\n      <button id=\"six\" value=\"6\" onClick={props.numbers}>\r\n        6\r\n      </button>\r\n      <button\r\n        id=\"add\"\r\n        value=\"+\"\r\n        style={operatorStyle}\r\n        onClick={props.operations}\r\n      >\r\n        +\r\n      </button>\r\n      <button id=\"one\" value=\"1\" onClick={props.numbers}>\r\n        1\r\n      </button>\r\n      <button id=\"two\" value=\"2\" onClick={props.numbers}>\r\n        2\r\n      </button>\r\n      <button id=\"three\" value=\"3\" onClick={props.numbers}>\r\n        3\r\n      </button>\r\n      <button\r\n        id=\"zero\"\r\n        value=\"0\"\r\n        className=\"grid-item-zero\"\r\n        onClick={props.numbers}\r\n      >\r\n        0\r\n      </button>\r\n      <button id=\"decimal\" value=\".\" onClick={props.decimal}>\r\n        .\r\n      </button>\r\n      <button\r\n        id=\"equals\"\r\n        value=\"=\"\r\n        className=\"grid-item-equal\"\r\n        style={equalsStyle}\r\n        onClick={props.result}\r\n      >\r\n        =\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n","import React from \"react\";\r\n\r\nconst Author = props => {\r\n  return (\r\n    <div id=\"author\" className=\"author\">\r\n      <p>\r\n        Made with{\" \"}\r\n        <span role=\"img\" aria-label=\"Heart\">\r\n          ðŸ’—\r\n        </span>{\" \"}\r\n        by\r\n      </p>\r\n      <a href={props.github} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        {props.name}\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Author;\r\n","import React from \"react\";\r\nimport * as math from \"mathjs\";\r\n\r\nimport Result from \"./components/Result\";\r\nimport Buttons from \"./components/Buttons\";\r\nimport Author from \"./components/Author\";\r\nimport \"./App.css\";\r\n\r\nconst isOperator = /[*+\\-/]/,\r\n  endsWithOperator = /[*+\\-/]$/,\r\n  startsWithOperator = /^[*+\\-/]/,\r\n  startsWithZero = /^0/;\r\n\r\nclass Calculator extends React.Component {\r\n  state = {\r\n    currVal: \"0\",\r\n    prevVal: \"0\",\r\n    maxPrevVal: \"0\",\r\n    operations: [],\r\n    isEvaluated: false\r\n  };\r\n\r\n  maxDigitWarning = () => {\r\n    this.setState({\r\n      prevVal: \"MAX DIGIT LIMIT\",\r\n      maxPrevVal: this.state.prevVal\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({\r\n        prevVal: this.state.maxPrevVal\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  handleClear = () => {\r\n    this.setState({\r\n      currVal: \"0\",\r\n      prevVal: \"0\",\r\n      maxPrevVal: \"0\",\r\n      operations: [],\r\n      isEvaluated: false\r\n    });\r\n  };\r\n\r\n  handleNumbers = e => {\r\n    let currVal_ = this.state.currVal;\r\n    let prevVal_ = this.state.prevVal;\r\n    let value = e.target.value;\r\n\r\n    if (!prevVal_.includes(\"DIGIT\")) {\r\n      if (prevVal_.length > 10) {\r\n        this.maxDigitWarning();\r\n      } else if (this.state.isEvaluated) {\r\n        this.setState({\r\n          currVal: value,\r\n          prevVal: value,\r\n          operations: [],\r\n          isEvaluated: false\r\n        });\r\n      } else {\r\n        if (this.state.prevVal.includes(\".\")) {\r\n          this.setState({\r\n            currVal: currVal_ + value,\r\n            prevVal: prevVal_ + value\r\n          });\r\n        } else {\r\n          let currVal = currVal_.replace(startsWithZero, \"\");\r\n          let prevVal = prevVal_.replace(startsWithZero, \"\");\r\n\r\n          if (prevVal_ === \"0\" && value === \"0\") return;\r\n\r\n          if (isOperator.test(prevVal)) {\r\n            prevVal = value;\r\n          } else {\r\n            prevVal += value;\r\n          }\r\n\r\n          this.setState({\r\n            currVal: currVal + value,\r\n            prevVal: prevVal\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  handleOperations = e => {\r\n    let currVal = this.state.currVal;\r\n    let prevVal = this.state.prevVal;\r\n    let value = e.target.value;\r\n    let operations = [...this.state.operations];\r\n\r\n    if (this.state.isEvaluated) {\r\n      this.setState({\r\n        currVal: prevVal + value,\r\n        prevVal: value,\r\n        operations: [value],\r\n        isEvaluated: false\r\n      });\r\n    } else {\r\n      if (isOperator.test(prevVal)) {\r\n        let currVal_ = currVal.replace(endsWithOperator, value);\r\n        let slicedOps = operations.slice(0, operations.length - 1);\r\n        this.setState({\r\n          currVal: currVal_,\r\n          prevVal: value,\r\n          operations: [...slicedOps, value]\r\n        });\r\n      } else {\r\n        if (prevVal.includes(\"DIGIT\")) {\r\n          return;\r\n        }\r\n\r\n        this.setState({\r\n          currVal: currVal + value,\r\n          prevVal: value,\r\n          operations: [...operations, value]\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleResult = () => {\r\n    let currVal = this.state.currVal;\r\n\r\n    if (this.state.isEvaluated) {\r\n      return;\r\n    }\r\n\r\n    if (startsWithOperator.test(currVal) && endsWithOperator.test(currVal)) {\r\n      let sliced = currVal.slice(0, currVal.length - 1);\r\n      if (sliced[0] === \"-\" || sliced[0] === \"+\") {\r\n        let result = math.evaluate(sliced);\r\n        this.setState({\r\n          currVal: sliced + \"=\" + String(result),\r\n          prevVal: String(result),\r\n          isEvaluated: true\r\n        });\r\n      } else {\r\n        return;\r\n      }\r\n    } else if (startsWithOperator.test(currVal)) {\r\n      let sliced = currVal.slice();\r\n      if (sliced[0] === \"-\" || sliced[0] === \"+\") {\r\n        let result = math.evaluate(sliced);\r\n        this.setState({\r\n          currVal: sliced + \"=\" + String(result),\r\n          prevVal: String(result),\r\n          isEvaluated: true\r\n        });\r\n      }\r\n    } else if (endsWithOperator.test(currVal)) {\r\n      let sliced = currVal.slice(0, currVal.length - 1);\r\n      let result = math.evaluate(sliced);\r\n      this.setState({\r\n        currVal: sliced + \"=\" + String(result),\r\n        prevVal: String(result),\r\n        isEvaluated: true\r\n      });\r\n    } else {\r\n      let sliced = currVal.slice();\r\n      let result = math.evaluate(sliced);\r\n\r\n      this.setState({\r\n        currVal: sliced + \"=\" + String(result),\r\n        prevVal: String(result),\r\n        isEvaluated: true\r\n      });\r\n    }\r\n  };\r\n\r\n  handleDecimal = e => {\r\n    if (this.state.isEvaluated) {\r\n      this.setState({\r\n        currVal: \"0\" + e.target.value,\r\n        prevVal: \"0\" + e.target.value,\r\n        isEvaluated: false\r\n      });\r\n    } else {\r\n      if (this.state.prevVal.includes(\".\")) {\r\n        return;\r\n      } else {\r\n        if (this.state.prevVal.includes(\"DIGIT\")) {\r\n          return;\r\n        }\r\n        this.setState({\r\n          currVal: this.state.currVal + e.target.value,\r\n          prevVal: this.state.prevVal + e.target.value\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"container\" className=\"container\">\r\n        <div className=\"calculator-container\">\r\n          <Result head={this.state.currVal} result={this.state.prevVal} />\r\n          <Buttons\r\n            clear={this.handleClear}\r\n            numbers={this.handleNumbers}\r\n            operations={this.handleOperations}\r\n            decimal={this.handleDecimal}\r\n            result={this.handleResult}\r\n          />\r\n        </div>\r\n        <Author\r\n          name=\"Abdullah Furkan Ã–zbek\"\r\n          github=\"https://github.com/afozbek\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calculator;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport Calculator from \"./Calculator\";\r\nimport \"./index.css\";\r\n\r\nconst projectName = \"javaScript-calculator\";\r\nlocalStorage.setItem(\"project-name\", projectName);\r\n\r\nReactDOM.render(<Calculator />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}